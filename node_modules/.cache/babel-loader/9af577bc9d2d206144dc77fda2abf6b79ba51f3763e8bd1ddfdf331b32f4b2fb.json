{"ast":null,"code":"import * as React from 'react';\nfunction ratio(_ref) {\n  let {\n    width,\n    height\n  } = _ref;\n  return width / height;\n}\nfunction round(value) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const factor = 10 ** decimals;\n  return Math.round((value + Number.EPSILON) * factor) / factor;\n}\nfunction rankingFunctionComparator(rank) {\n  return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n  constructor(comparator) {\n    this.comparator = comparator;\n    this.heap = [];\n    this.n = 0;\n  }\n  greater(i, j) {\n    return this.comparator(this.heap[i], this.heap[j]) < 0;\n  }\n  swap(i, j) {\n    const temp = this.heap[i];\n    this.heap[i] = this.heap[j];\n    this.heap[j] = temp;\n  }\n  swim(i) {\n    let k = i;\n    let k2 = Math.floor(k / 2);\n    while (k > 1 && this.greater(k2, k)) {\n      this.swap(k2, k);\n      k = k2;\n      k2 = Math.floor(k / 2);\n    }\n  }\n  sink(i) {\n    let k = i;\n    let k2 = k * 2;\n    while (k2 <= this.n) {\n      if (k2 < this.n && this.greater(k2, k2 + 1)) k2 += 1;\n      if (!this.greater(k, k2)) break;\n      this.swap(k, k2);\n      k = k2;\n      k2 = k * 2;\n    }\n  }\n  push(element) {\n    this.n += 1;\n    this.heap[this.n] = element;\n    this.swim(this.n);\n  }\n  pop() {\n    if (this.n === 0) return undefined;\n    this.swap(1, this.n);\n    this.n -= 1;\n    const max = this.heap.pop();\n    this.sink(1);\n    return max;\n  }\n  size() {\n    return this.n;\n  }\n}\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n  const precedentsMap = new Map();\n  const visited = new Set();\n  const storedShortestPaths = new Map();\n  storedShortestPaths.set(startNode, 0);\n  const queue = new MinHeap(rankingFunctionComparator(el => el.weight));\n  queue.push({\n    id: startNode,\n    weight: 0\n  });\n  while (queue.size() > 0) {\n    const {\n      id,\n      weight\n    } = queue.pop();\n    if (!visited.has(id)) {\n      const neighboringNodes = graph(id);\n      visited.add(id);\n      neighboringNodes.forEach((neighborWeight, neighbor) => {\n        const newWeight = weight + neighborWeight;\n        const currentId = precedentsMap.get(neighbor);\n        const currentWeight = storedShortestPaths.get(neighbor);\n        if (currentWeight === undefined || currentWeight > newWeight && (currentWeight / newWeight > 1.005 || currentId !== undefined && currentId < id)) {\n          storedShortestPaths.set(neighbor, newWeight);\n          queue.push({\n            id: neighbor,\n            weight: newWeight\n          });\n          precedentsMap.set(neighbor, id);\n        }\n      });\n    }\n  }\n  return storedShortestPaths.has(endNode) ? precedentsMap : undefined;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n  const nodes = [];\n  for (let node = endNode; node !== undefined; node = precedentsMap.get(node)) {\n    nodes.push(node);\n  }\n  return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n  const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n  return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n}\nfunction findIdealNodeSearch(_ref2) {\n  let {\n    photos,\n    targetRowHeight,\n    containerWidth\n  } = _ref2;\n  const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n  return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n  const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n  const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n  return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n  const row = photos.slice(i, j);\n  const commonHeight = getCommonHeight(row, width, spacing, padding);\n  return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n}\nfunction makeGetRowNeighbors(_ref3) {\n  let {\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  } = _ref3;\n  return node => {\n    var _a, _b;\n    const {\n      containerWidth,\n      spacing,\n      padding\n    } = layoutOptions;\n    const results = new Map();\n    results.set(node, 0);\n    const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n    const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n    for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n      if (i - node > endOffset) break;\n      const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n      if (currentCost === undefined) break;\n      results.set(i, currentCost);\n    }\n    return results;\n  };\n}\nfunction computeRowsLayout(_ref4) {\n  let {\n    photos,\n    layoutOptions\n  } = _ref4;\n  const {\n    spacing,\n    padding,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints\n  } = layoutOptions;\n  const limitNodeSearch = findIdealNodeSearch({\n    photos,\n    containerWidth,\n    targetRowHeight\n  });\n  const getNeighbors = makeGetRowNeighbors({\n    photos,\n    layoutOptions,\n    targetRowHeight,\n    limitNodeSearch,\n    rowConstraints\n  });\n  const path = findShortestPath(getNeighbors, 0, photos.length);\n  if (path === undefined) return undefined;\n  const layout = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const row = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i - 1], path[i]);\n    const height = getCommonHeight(row.map(_ref5 => {\n      let {\n        photo\n      } = _ref5;\n      return photo;\n    }), containerWidth, spacing, padding);\n    layout.push(row.map((_ref6, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref6;\n      return {\n        photo,\n        layout: {\n          height,\n          width: height * ratio(photo),\n          index,\n          photoIndex,\n          photosCount: row.length\n        }\n      };\n    }));\n  }\n  return layout;\n}\nfunction calcWidth(base, _ref7, _ref8) {\n  let {\n    width,\n    photosCount\n  } = _ref7;\n  let {\n    spacing,\n    padding,\n    containerWidth\n  } = _ref8;\n  const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n  return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n  return layoutOptions.layout !== \"rows\" ? `calc(100% - ${2 * layoutOptions.padding}px)` : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n  var _a, _b;\n  return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n  let srcSet;\n  let sizes;\n  const images = photo.srcSet || photo.images;\n  if (images && images.length > 0) {\n    srcSet = images.concat(!images.find(_ref9 => {\n      let {\n        width\n      } = _ref9;\n      return width === photo.width;\n    }) ? [{\n      src: photo.src,\n      width: photo.width,\n      height: photo.height\n    }] : []).sort((first, second) => first.width - second.width).map(image => `${image.src} ${image.width}w`).join(\", \");\n  }\n  if (layoutOptions.sizes) {\n    sizes = (layoutOptions.sizes.sizes || []).map(_ref10 => {\n      let {\n        viewport,\n        size\n      } = _ref10;\n      return `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`;\n    }).concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions)).join(\", \");\n  } else if (srcSet) {\n    sizes = `${Math.ceil(layout.width / layoutOptions.containerWidth * 100)}vw`;\n  }\n  return {\n    srcSet,\n    sizes\n  };\n}\nfunction PhotoRenderer(props) {\n  var _a, _b;\n  const {\n    photo,\n    layout,\n    layoutOptions,\n    imageProps: {\n      style,\n      ...restImageProps\n    } = {},\n    renderPhoto\n  } = props;\n  const {\n    onClick\n  } = layoutOptions;\n  const imageStyle = {\n    display: \"block\",\n    boxSizing: \"content-box\",\n    width: cssPhotoWidth(layout, layoutOptions),\n    height: \"auto\",\n    aspectRatio: `${photo.width} / ${photo.height}`,\n    ...(layoutOptions.padding ? {\n      padding: `${layoutOptions.padding}px`\n    } : null),\n    ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") && layout.photoIndex < layout.photosCount - 1 ? {\n      marginBottom: `${layoutOptions.spacing}px`\n    } : null),\n    ...(onClick ? {\n      cursor: \"pointer\"\n    } : null),\n    ...style\n  };\n  const handleClick = onClick ? event => {\n    onClick({\n      event,\n      photo,\n      index: layout.index\n    });\n  } : undefined;\n  const imageProps = {\n    src: photo.src,\n    alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n    title: photo.title,\n    onClick: handleClick,\n    style: imageStyle,\n    className: \"react-photo-album--photo\",\n    loading: \"lazy\",\n    decoding: \"async\",\n    ...srcSetAndSizes(photo, layout, layoutOptions),\n    ...restImageProps\n  };\n  const renderDefaultPhoto = options => {\n    const {\n      src,\n      alt,\n      srcSet,\n      sizes,\n      style: unwrappedStyle,\n      ...rest\n    } = imageProps;\n    return React.createElement(\"img\", {\n      alt: alt,\n      ...(srcSet ? {\n        srcSet,\n        sizes\n      } : null),\n      src: src,\n      style: (options === null || options === void 0 ? void 0 : options.wrapped) ? {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\"\n      } : unwrappedStyle,\n      ...rest\n    });\n  };\n  const wrapperStyle = (_ref11 => {\n    let {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom,\n      cursor\n    } = _ref11;\n    return {\n      display,\n      boxSizing,\n      width,\n      aspectRatio,\n      padding,\n      marginBottom,\n      cursor\n    };\n  })(imageStyle);\n  return React.createElement(React.Fragment, null, (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n    photo,\n    layout,\n    layoutOptions,\n    imageProps,\n    renderDefaultPhoto,\n    wrapperStyle\n  })) !== null && _b !== void 0 ? _b : renderDefaultPhoto());\n}\nfunction defaultRenderRowContainer(_ref12) {\n  let {\n    rowContainerProps,\n    children\n  } = _ref12;\n  return React.createElement(\"div\", {\n    ...rowContainerProps\n  }, children);\n}\nfunction RowContainerRenderer(props) {\n  const {\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    renderRowContainer,\n    rowContainerProps: {\n      style,\n      ...restRowContainerProps\n    } = {},\n    children\n  } = props;\n  const rowContainerProps = {\n    className: \"react-photo-album--row\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n      ...(rowIndex < rowsCount - 1 ? {\n        marginBottom: `${layoutOptions.spacing}px`\n      } : null),\n      ...style\n    },\n    ...restRowContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n    layoutOptions,\n    rowIndex,\n    rowsCount,\n    rowContainerProps,\n    children\n  }));\n}\nfunction RowsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderRowContainer,\n    componentsProps\n  } = props;\n  const rowsLayout = computeRowsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!rowsLayout) return null;\n  return React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => React.createElement(RowContainerRenderer, {\n    key: `row-${rowIndex}`,\n    layoutOptions: layoutOptions,\n    rowIndex: rowIndex,\n    rowsCount: rowsLayout.length,\n    renderRowContainer: renderRowContainer,\n    rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps\n  }, row.map(_ref13 => {\n    let {\n      photo,\n      layout\n    } = _ref13;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo: photo,\n      layout: layout,\n      layoutOptions: layoutOptions,\n      renderPhoto: renderPhoto,\n      imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n    });\n  }))));\n}\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n  const matrix = new Map();\n  const queue = new Set();\n  queue.add(startNode);\n  for (let length = 0; length < pathLength; length += 1) {\n    const currentQueue = [...queue.keys()];\n    queue.clear();\n    currentQueue.forEach(node => {\n      const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n      graph(node).forEach(_ref14 => {\n        let {\n          neighbor,\n          weight\n        } = _ref14;\n        let paths = matrix.get(neighbor);\n        if (!paths) {\n          paths = [];\n          matrix.set(neighbor, paths);\n        }\n        const newWeight = accumulatedWeight + weight;\n        const nextPath = paths[length + 1];\n        if (!nextPath || nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node)) {\n          paths[length + 1] = {\n            node,\n            weight: newWeight\n          };\n        }\n        if (length < pathLength - 1 && neighbor !== endNode) {\n          queue.add(neighbor);\n        }\n      });\n    });\n  }\n  return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n  const path = [endNode];\n  for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n    node = matrix.get(node)[length].node;\n    path.push(node);\n  }\n  return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n  return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\nfunction makeGetColumnNeighbors(_ref15) {\n  let {\n    photos,\n    spacing,\n    padding,\n    targetColumnWidth,\n    targetColumnHeight\n  } = _ref15;\n  return node => {\n    const results = [];\n    const cutOffHeight = targetColumnHeight * 1.5;\n    let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n    for (let i = node + 1; i < photos.length + 1; i += 1) {\n      results.push({\n        neighbor: i,\n        weight: (targetColumnHeight - height) ** 2\n      });\n      if (height > cutOffHeight || i === photos.length) {\n        break;\n      }\n      height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n    }\n    return results;\n  };\n}\nfunction buildColumnsModel(_ref16) {\n  let {\n    path,\n    photos,\n    containerWidth,\n    columnsGaps,\n    columnsRatios,\n    spacing,\n    padding\n  } = _ref16;\n  const columnsModel = [];\n  const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.map((photo, index) => ({\n      photo,\n      index\n    })).slice(path[i], path[i + 1]);\n    const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n    const columnWidth = (containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) * columnsRatios[i] / totalRatio;\n    columnsModel.push(column.map((_ref17, photoIndex) => {\n      let {\n        photo,\n        index\n      } = _ref17;\n      return {\n        photo,\n        layout: {\n          width: columnWidth,\n          height: columnWidth / ratio(photo),\n          index,\n          photoIndex,\n          photosCount: column.length\n        }\n      };\n    }));\n  }\n  return columnsModel;\n}\nfunction computeColumnsModel(_ref18) {\n  let {\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  } = _ref18;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnsGaps = [];\n  const columnsRatios = [];\n  if (photos.length <= columns) {\n    const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n    for (let i = 0; i < columns; i += 1) {\n      columnsGaps[i] = 2 * padding;\n      columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n    }\n    const columnsModel = buildColumnsModel({\n      path: Array.from({\n        length: columns + 1\n      }).map((_, index) => Math.min(index, photos.length)),\n      photos,\n      columnsRatios,\n      columnsGaps,\n      containerWidth,\n      spacing,\n      padding\n    });\n    return {\n      columnsGaps,\n      columnsRatios,\n      columnsModel\n    };\n  }\n  const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) + spacing * (photos.length - columns) + 2 * padding * photos.length) / columns;\n  const getNeighbors = makeGetColumnNeighbors({\n    photos,\n    targetColumnWidth,\n    targetColumnHeight,\n    spacing,\n    padding\n  });\n  const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n  for (let i = 0; i < path.length - 1; i += 1) {\n    const column = photos.slice(path[i], path[i + 1]);\n    columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n    columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n  }\n  const columnsModel = buildColumnsModel({\n    path,\n    photos,\n    columnsRatios,\n    columnsGaps,\n    containerWidth,\n    spacing,\n    padding\n  });\n  return {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  };\n}\nfunction computeLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  const {\n    columnsGaps,\n    columnsRatios,\n    columnsModel\n  } = computeColumnsModel({\n    photos,\n    layoutOptions,\n    targetColumnWidth\n  });\n  if (columnsModel.findIndex(columnModel => columnModel.findIndex(_ref19 => {\n    let {\n      layout: {\n        width,\n        height\n      }\n    } = _ref19;\n    return width < 0 || height < 0;\n  }) >= 0) >= 0) {\n    if (columns > 1) {\n      return computeLayout({\n        photos,\n        layoutOptions: {\n          ...layoutOptions,\n          columns: columns - 1\n        }\n      });\n    }\n    return undefined;\n  }\n  return {\n    columnsModel,\n    columnsGaps,\n    columnsRatios\n  };\n}\nfunction computeColumnsLayout(_ref20) {\n  let {\n    photos,\n    layoutOptions\n  } = _ref20;\n  return computeLayout({\n    photos,\n    layoutOptions\n  });\n}\nfunction defaultRenderColumnContainer(_ref21) {\n  let {\n    columnContainerProps,\n    children\n  } = _ref21;\n  return React.createElement(\"div\", {\n    ...columnContainerProps\n  }, children);\n}\nfunction cssColumnWidth(props) {\n  const {\n    layoutOptions,\n    columnIndex,\n    columnsCount,\n    columnsGaps,\n    columnsRatios\n  } = props;\n  const {\n    layout,\n    spacing,\n    padding\n  } = layoutOptions;\n  if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n    return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n  }\n  const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n  const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n  return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n  const {\n    layoutOptions,\n    renderColumnContainer,\n    children,\n    columnContainerProps: {\n      style,\n      ...restColumnContainerProps\n    } = {},\n    ...rest\n  } = props;\n  const columnContainerProps = {\n    className: \"react-photo-album--column\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexWrap: \"nowrap\",\n      alignItems: \"flex-start\",\n      width: cssColumnWidth(props),\n      justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n      ...style\n    },\n    ...restColumnContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n    layoutOptions,\n    columnContainerProps,\n    children,\n    ...rest\n  }));\n}\nfunction ColumnsLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps\n  } = props;\n  const columnsLayout = computeColumnsLayout({\n    photos,\n    layoutOptions\n  });\n  if (!columnsLayout) return null;\n  const {\n    columnsModel,\n    columnsRatios,\n    columnsGaps\n  } = columnsLayout;\n  return React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: `column-${columnIndex}`,\n    layoutOptions: layoutOptions,\n    columnIndex: columnIndex,\n    columnsCount: columnsModel.length,\n    columnsGaps: columnsGaps,\n    columnsRatios: columnsRatios,\n    renderColumnContainer: renderColumnContainer,\n    columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps\n  }, column.map(_ref22 => {\n    let {\n      photo,\n      layout\n    } = _ref22;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo: photo,\n      layout: layout,\n      layoutOptions: layoutOptions,\n      renderPhoto: renderPhoto,\n      imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n    });\n  }))));\n}\nfunction computeMasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions\n  } = props;\n  const {\n    columns,\n    spacing,\n    padding,\n    containerWidth\n  } = layoutOptions;\n  const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n  if (columnWidth <= 0) {\n    return columns > 1 ? computeMasonryLayout({\n      ...props,\n      layoutOptions: {\n        ...layoutOptions,\n        columns: columns - 1\n      }\n    }) : undefined;\n  }\n  const columnsCurrentTopPositions = [];\n  for (let i = 0; i < columns; i += 1) {\n    columnsCurrentTopPositions[i] = 0;\n  }\n  const columnsModel = photos.reduce((model, photo, index) => {\n    const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n    columnsCurrentTopPositions[shortestColumn] = columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n    model[shortestColumn].push({\n      photo,\n      index\n    });\n    return model;\n  }, Array.from({\n    length: columns\n  }).map(() => []));\n  return columnsModel.map(column => column.map((_ref23, photoIndex) => {\n    let {\n      photo,\n      index\n    } = _ref23;\n    return {\n      photo,\n      layout: {\n        width: columnWidth,\n        height: columnWidth / ratio(photo),\n        index,\n        photoIndex,\n        photosCount: column.length\n      }\n    };\n  }));\n}\nfunction MasonryLayout(props) {\n  const {\n    photos,\n    layoutOptions,\n    renderPhoto,\n    renderColumnContainer,\n    componentsProps\n  } = props;\n  const masonryLayout = computeMasonryLayout({\n    photos,\n    layoutOptions\n  });\n  if (!masonryLayout) return null;\n  return React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => React.createElement(ColumnContainerRenderer, {\n    key: `masonry-column-${columnIndex}`,\n    layoutOptions: layoutOptions,\n    columnsCount: masonryLayout.length,\n    columnIndex: columnIndex,\n    renderColumnContainer: renderColumnContainer,\n    columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps\n  }, column.map(_ref24 => {\n    let {\n      photo,\n      layout\n    } = _ref24;\n    return React.createElement(PhotoRenderer, {\n      key: photo.key || photo.src,\n      photo: photo,\n      layout: layout,\n      layoutOptions: layoutOptions,\n      renderPhoto: renderPhoto,\n      imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps\n    });\n  }))));\n}\nfunction defaultRenderContainer(_ref25) {\n  let {\n    containerProps,\n    children,\n    containerRef\n  } = _ref25;\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    ...containerProps\n  }, children);\n}\nfunction ContainerRenderer(props) {\n  const {\n    layout,\n    renderContainer,\n    children,\n    containerRef,\n    containerProps: {\n      style,\n      ...restContainerProps\n    } = {}\n  } = props;\n  const containerProps = {\n    className: `react-photo-album react-photo-album--${layout}`,\n    style: {\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n      flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n      ...style\n    },\n    ...restContainerProps\n  };\n  return React.createElement(React.Fragment, null, (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n    containerProps,\n    containerRef,\n    layout,\n    children\n  }));\n}\nfunction useArray(array) {\n  const ref = React.useRef(array);\n  if (!array || !ref.current || array.join() !== ref.current.join()) {\n    ref.current = array;\n  }\n  return ref.current;\n}\nfunction containerWidthReducer(state, _ref26) {\n  let {\n    newContainerWidth,\n    newScrollbarWidth\n  } = _ref26;\n  const {\n    containerWidth,\n    scrollbarWidth\n  } = state;\n  if (containerWidth !== undefined && scrollbarWidth !== undefined && newContainerWidth !== undefined && newScrollbarWidth !== undefined && newContainerWidth > containerWidth && newContainerWidth - containerWidth <= 20 && newScrollbarWidth < scrollbarWidth) {\n    return {\n      containerWidth,\n      scrollbarWidth: newScrollbarWidth\n    };\n  }\n  return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth ? {\n    containerWidth: newContainerWidth,\n    scrollbarWidth: newScrollbarWidth\n  } : state;\n}\nfunction resolveContainerWidth(el, breakpoints) {\n  let width = el === null || el === void 0 ? void 0 : el.clientWidth;\n  if (width !== undefined && breakpoints && breakpoints.length > 0) {\n    const sorted = [...breakpoints.filter(x => x > 0)].sort((a, b) => b - a);\n    sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n    const threshold = width;\n    width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n  }\n  return width;\n}\nfunction useContainerWidth(breakpoints, defaultContainerWidth) {\n  const [{\n    containerWidth\n  }, dispatch] = React.useReducer(containerWidthReducer, {\n    containerWidth: defaultContainerWidth\n  });\n  const ref = React.useRef(null);\n  const observerRef = React.useRef();\n  const containerRef = React.useCallback(node => {\n    var _a;\n    (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n    observerRef.current = undefined;\n    ref.current = node;\n    const updateWidth = () => dispatch({\n      newContainerWidth: resolveContainerWidth(ref.current, breakpoints),\n      newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth\n    });\n    updateWidth();\n    if (node && typeof ResizeObserver !== \"undefined\") {\n      observerRef.current = new ResizeObserver(updateWidth);\n      observerRef.current.observe(node);\n    }\n  }, [breakpoints]);\n  return {\n    containerRef,\n    containerWidth\n  };\n}\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, containerWidth) {\n  return typeof value === \"function\" ? value(containerWidth) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n  return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n  const index = breakpoints.findIndex(breakpoint => breakpoint <= containerWidth);\n  return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values) {\n  let minValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  const value = unwrapParameter(parameter, containerWidth);\n  return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\nfunction resolveLayoutOptions(_ref27) {\n  let {\n    layout,\n    onClick,\n    containerWidth,\n    targetRowHeight,\n    rowConstraints,\n    columns,\n    spacing,\n    padding,\n    sizes\n  } = _ref27;\n  return {\n    layout,\n    onClick,\n    containerWidth,\n    columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n    spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n    padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n    targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [w => w / 5, w => w / 4, w => w / 3, w => w / 2]),\n    rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n    sizes\n  };\n}\nfunction resolveComponentsProps(componentsProps, containerWidth) {\n  return typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n}\nfunction renderLayout(props, containerWidth, componentsProps) {\n  const {\n    photos,\n    layout,\n    renderPhoto,\n    renderRowContainer,\n    renderColumnContainer\n  } = props;\n  const layoutOptions = resolveLayoutOptions({\n    containerWidth,\n    ...props\n  });\n  const commonLayoutProps = {\n    photos,\n    renderPhoto,\n    componentsProps\n  };\n  if (layout === \"rows\") {\n    return React.createElement(RowsLayout, {\n      layoutOptions: layoutOptions,\n      renderRowContainer: renderRowContainer,\n      ...commonLayoutProps\n    });\n  }\n  if (layout === \"columns\") {\n    return React.createElement(ColumnsLayout, {\n      layoutOptions: layoutOptions,\n      renderColumnContainer: renderColumnContainer,\n      ...commonLayoutProps\n    });\n  }\n  return React.createElement(MasonryLayout, {\n    layoutOptions: layoutOptions,\n    renderColumnContainer: renderColumnContainer,\n    ...commonLayoutProps\n  });\n}\nfunction PhotoAlbum(props) {\n  const {\n    photos,\n    layout,\n    renderContainer,\n    defaultContainerWidth,\n    breakpoints\n  } = props;\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(useArray(breakpoints), defaultContainerWidth);\n  if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos)) return null;\n  const componentsProps = resolveComponentsProps(props.componentsProps, containerWidth);\n  return React.createElement(ContainerRenderer, {\n    layout: layout,\n    containerRef: containerRef,\n    renderContainer: renderContainer,\n    containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps\n  }, containerWidth ? renderLayout(props, containerWidth, componentsProps) : null);\n}\nexport { PhotoAlbum, PhotoAlbum as default };","map":{"version":3,"names":["React","ratio","_ref","width","height","round","value","decimals","arguments","length","undefined","factor","Math","Number","EPSILON","rankingFunctionComparator","rank","a","b","MinHeap","constructor","comparator","heap","n","greater","i","j","swap","temp","swim","k","k2","floor","sink","push","element","pop","max","size","buildPrecedentsMap","graph","startNode","endNode","precedentsMap","Map","visited","Set","storedShortestPaths","set","queue","el","weight","id","has","neighboringNodes","add","forEach","neighborWeight","neighbor","newWeight","currentId","get","currentWeight","getPathFromPrecedentsMap","nodes","node","reverse","findShortestPath","findIdealNodeSearch","_ref2","photos","targetRowHeight","containerWidth","minRatio","reduce","acc","photo","min","MAX_VALUE","getCommonHeight","row","spacing","padding","rowWidth","totalAspectRatio","cost","slice","commonHeight","makeGetRowNeighbors","_ref3","layoutOptions","limitNodeSearch","rowConstraints","_a","_b","results","startOffset","minPhotos","endOffset","maxPhotos","Infinity","currentCost","computeRowsLayout","_ref4","getNeighbors","path","layout","map","index","_ref5","_ref6","photoIndex","photosCount","calcWidth","base","_ref7","_ref8","gaps","cssPhotoWidth","calculateSizesValue","match","srcSetAndSizes","srcSet","sizes","images","concat","find","_ref9","src","sort","first","second","image","join","_ref10","viewport","ceil","PhotoRenderer","props","imageProps","style","restImageProps","renderPhoto","onClick","imageStyle","display","boxSizing","aspectRatio","marginBottom","cursor","handleClick","event","alt","title","className","loading","decoding","renderDefaultPhoto","options","unwrappedStyle","rest","createElement","wrapped","wrapperStyle","_ref11","Fragment","defaultRenderRowContainer","_ref12","rowContainerProps","children","RowContainerRenderer","rowIndex","rowsCount","renderRowContainer","restRowContainerProps","flexDirection","flexWrap","alignItems","justifyContent","RowsLayout","componentsProps","rowsLayout","key","_ref13","computeShortestPath","pathLength","matrix","currentQueue","keys","clear","accumulatedWeight","_ref14","paths","nextPath","reconstructShortestPath","findShortestPathLengthN","makeGetColumnNeighbors","_ref15","targetColumnWidth","targetColumnHeight","cutOffHeight","buildColumnsModel","_ref16","columnsGaps","columnsRatios","columnsModel","totalRatio","total","columnRatio","column","totalAdjustedGaps","columnWidth","_ref17","computeColumnsModel","_ref18","columns","averageRatio","Array","from","_","computeLayout","findIndex","columnModel","_ref19","computeColumnsLayout","_ref20","defaultRenderColumnContainer","_ref21","columnContainerProps","cssColumnWidth","columnIndex","columnsCount","ColumnContainerRenderer","renderColumnContainer","restColumnContainerProps","ColumnsLayout","columnsLayout","_ref22","computeMasonryLayout","columnsCurrentTopPositions","model","shortestColumn","currentShortestColumn","item","_ref23","MasonryLayout","masonryLayout","_ref24","defaultRenderContainer","_ref25","containerProps","containerRef","ref","ContainerRenderer","renderContainer","restContainerProps","useArray","array","useRef","current","containerWidthReducer","state","_ref26","newContainerWidth","newScrollbarWidth","scrollbarWidth","resolveContainerWidth","breakpoints","clientWidth","sorted","filter","x","threshold","breakpoint","useContainerWidth","defaultContainerWidth","dispatch","useReducer","observerRef","useCallback","disconnect","updateWidth","window","innerWidth","document","documentElement","ResizeObserver","observe","Object","freeze","unwrap","unwrapParameter","selectResponsiveValue","values","resolveResponsiveParameter","parameter","minValue","resolveLayoutOptions","_ref27","w","resolveComponentsProps","renderLayout","commonLayoutProps","PhotoAlbum","includes","isArray","default"],"sources":["/home/sristi/Desktop/thanusha_bday/node_modules/react-photo-album/dist/index.mjs"],"sourcesContent":["import * as React from 'react';\n\nfunction ratio({ width, height }) {\n    return width / height;\n}\n\nfunction round(value, decimals = 0) {\n    const factor = 10 ** decimals;\n    return Math.round((value + Number.EPSILON) * factor) / factor;\n}\n\nfunction rankingFunctionComparator(rank) {\n    return (a, b) => rank(b) - rank(a);\n}\nclass MinHeap {\n    constructor(comparator) {\n        this.comparator = comparator;\n        this.heap = [];\n        this.n = 0;\n    }\n    greater(i, j) {\n        return this.comparator(this.heap[i], this.heap[j]) < 0;\n    }\n    swap(i, j) {\n        const temp = this.heap[i];\n        this.heap[i] = this.heap[j];\n        this.heap[j] = temp;\n    }\n    swim(i) {\n        let k = i;\n        let k2 = Math.floor(k / 2);\n        while (k > 1 && this.greater(k2, k)) {\n            this.swap(k2, k);\n            k = k2;\n            k2 = Math.floor(k / 2);\n        }\n    }\n    sink(i) {\n        let k = i;\n        let k2 = k * 2;\n        while (k2 <= this.n) {\n            if (k2 < this.n && this.greater(k2, k2 + 1))\n                k2 += 1;\n            if (!this.greater(k, k2))\n                break;\n            this.swap(k, k2);\n            k = k2;\n            k2 = k * 2;\n        }\n    }\n    push(element) {\n        this.n += 1;\n        this.heap[this.n] = element;\n        this.swim(this.n);\n    }\n    pop() {\n        if (this.n === 0)\n            return undefined;\n        this.swap(1, this.n);\n        this.n -= 1;\n        const max = this.heap.pop();\n        this.sink(1);\n        return max;\n    }\n    size() {\n        return this.n;\n    }\n}\n\nfunction buildPrecedentsMap(graph, startNode, endNode) {\n    const precedentsMap = new Map();\n    const visited = new Set();\n    const storedShortestPaths = new Map();\n    storedShortestPaths.set(startNode, 0);\n    const queue = new MinHeap(rankingFunctionComparator((el) => el.weight));\n    queue.push({ id: startNode, weight: 0 });\n    while (queue.size() > 0) {\n        const { id, weight } = queue.pop();\n        if (!visited.has(id)) {\n            const neighboringNodes = graph(id);\n            visited.add(id);\n            neighboringNodes.forEach((neighborWeight, neighbor) => {\n                const newWeight = weight + neighborWeight;\n                const currentId = precedentsMap.get(neighbor);\n                const currentWeight = storedShortestPaths.get(neighbor);\n                if (currentWeight === undefined ||\n                    (currentWeight > newWeight &&\n                        (currentWeight / newWeight > 1.005 || (currentId !== undefined && currentId < id)))) {\n                    storedShortestPaths.set(neighbor, newWeight);\n                    queue.push({ id: neighbor, weight: newWeight });\n                    precedentsMap.set(neighbor, id);\n                }\n            });\n        }\n    }\n    return storedShortestPaths.has(endNode) ? precedentsMap : undefined;\n}\nfunction getPathFromPrecedentsMap(precedentsMap, endNode) {\n    const nodes = [];\n    for (let node = endNode; node !== undefined; node = precedentsMap.get(node)) {\n        nodes.push(node);\n    }\n    return nodes.reverse();\n}\nfunction findShortestPath(graph, startNode, endNode) {\n    const precedentsMap = buildPrecedentsMap(graph, startNode, endNode);\n    return precedentsMap ? getPathFromPrecedentsMap(precedentsMap, endNode) : undefined;\n}\n\nfunction findIdealNodeSearch({ photos, targetRowHeight, containerWidth, }) {\n    const minRatio = photos.reduce((acc, photo) => Math.min(ratio(photo), acc), Number.MAX_VALUE);\n    return round(containerWidth / targetRowHeight / minRatio) + 2;\n}\nfunction getCommonHeight(row, containerWidth, spacing, padding) {\n    const rowWidth = containerWidth - (row.length - 1) * spacing - 2 * padding * row.length;\n    const totalAspectRatio = row.reduce((acc, photo) => acc + ratio(photo), 0);\n    return rowWidth / totalAspectRatio;\n}\nfunction cost(photos, i, j, width, targetRowHeight, spacing, padding) {\n    const row = photos.slice(i, j);\n    const commonHeight = getCommonHeight(row, width, spacing, padding);\n    return commonHeight > 0 ? (commonHeight - targetRowHeight) ** 2 * row.length : undefined;\n}\nfunction makeGetRowNeighbors({ photos, layoutOptions, targetRowHeight, limitNodeSearch, rowConstraints, }) {\n    return (node) => {\n        var _a, _b;\n        const { containerWidth, spacing, padding } = layoutOptions;\n        const results = new Map();\n        results.set(node, 0);\n        const startOffset = (_a = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.minPhotos) !== null && _a !== void 0 ? _a : 1;\n        const endOffset = Math.min(limitNodeSearch, (_b = rowConstraints === null || rowConstraints === void 0 ? void 0 : rowConstraints.maxPhotos) !== null && _b !== void 0 ? _b : Infinity);\n        for (let i = node + startOffset; i < photos.length + 1; i += 1) {\n            if (i - node > endOffset)\n                break;\n            const currentCost = cost(photos, node, i, containerWidth, targetRowHeight, spacing, padding);\n            if (currentCost === undefined)\n                break;\n            results.set(i, currentCost);\n        }\n        return results;\n    };\n}\nfunction computeRowsLayout({ photos, layoutOptions, }) {\n    const { spacing, padding, containerWidth, targetRowHeight, rowConstraints } = layoutOptions;\n    const limitNodeSearch = findIdealNodeSearch({ photos, containerWidth, targetRowHeight });\n    const getNeighbors = makeGetRowNeighbors({\n        photos,\n        layoutOptions,\n        targetRowHeight,\n        limitNodeSearch,\n        rowConstraints,\n    });\n    const path = findShortestPath(getNeighbors, 0, photos.length);\n    if (path === undefined)\n        return undefined;\n    const layout = [];\n    for (let i = 1; i < path.length; i += 1) {\n        const row = photos.map((photo, index) => ({ photo, index })).slice(path[i - 1], path[i]);\n        const height = getCommonHeight(row.map(({ photo }) => photo), containerWidth, spacing, padding);\n        layout.push(row.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                height,\n                width: height * ratio(photo),\n                index,\n                photoIndex,\n                photosCount: row.length,\n            },\n        })));\n    }\n    return layout;\n}\n\nfunction calcWidth(base, { width, photosCount }, { spacing, padding, containerWidth }) {\n    const gaps = spacing * (photosCount - 1) + 2 * padding * photosCount;\n    return `calc((${base} - ${gaps}px) / ${round((containerWidth - gaps) / width, 5)})`;\n}\nfunction cssPhotoWidth(layout, layoutOptions) {\n    return layoutOptions.layout !== \"rows\"\n        ? `calc(100% - ${2 * layoutOptions.padding}px)`\n        : calcWidth(\"100%\", layout, layoutOptions);\n}\nfunction calculateSizesValue(size, layout, layoutOptions) {\n    var _a, _b;\n    return calcWidth((_b = (_a = size.match(/calc\\((.*)\\)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : size, layout, layoutOptions);\n}\nfunction srcSetAndSizes(photo, layout, layoutOptions) {\n    let srcSet;\n    let sizes;\n    const images = photo.srcSet || photo.images;\n    if (images && images.length > 0) {\n        srcSet = images\n            .concat(!images.find(({ width }) => width === photo.width)\n            ? [{ src: photo.src, width: photo.width, height: photo.height }]\n            : [])\n            .sort((first, second) => first.width - second.width)\n            .map((image) => `${image.src} ${image.width}w`)\n            .join(\", \");\n    }\n    if (layoutOptions.sizes) {\n        sizes = (layoutOptions.sizes.sizes || [])\n            .map(({ viewport, size }) => `${viewport} ${calculateSizesValue(size, layout, layoutOptions)}`)\n            .concat(calculateSizesValue(layoutOptions.sizes.size, layout, layoutOptions))\n            .join(\", \");\n    }\n    else if (srcSet) {\n        sizes = `${Math.ceil((layout.width / layoutOptions.containerWidth) * 100)}vw`;\n    }\n    return { srcSet, sizes };\n}\nfunction PhotoRenderer(props) {\n    var _a, _b;\n    const { photo, layout, layoutOptions, imageProps: { style, ...restImageProps } = {}, renderPhoto } = props;\n    const { onClick } = layoutOptions;\n    const imageStyle = {\n        display: \"block\",\n        boxSizing: \"content-box\",\n        width: cssPhotoWidth(layout, layoutOptions),\n        height: \"auto\",\n        aspectRatio: `${photo.width} / ${photo.height}`,\n        ...(layoutOptions.padding ? { padding: `${layoutOptions.padding}px` } : null),\n        ...((layoutOptions.layout === \"columns\" || layoutOptions.layout === \"masonry\") &&\n            layout.photoIndex < layout.photosCount - 1\n            ? { marginBottom: `${layoutOptions.spacing}px` }\n            : null),\n        ...(onClick ? { cursor: \"pointer\" } : null),\n        ...style,\n    };\n    const handleClick = onClick\n        ? (event) => {\n            onClick({ event, photo, index: layout.index });\n        }\n        : undefined;\n    const imageProps = {\n        src: photo.src,\n        alt: (_a = photo.alt) !== null && _a !== void 0 ? _a : \"\",\n        title: photo.title,\n        onClick: handleClick,\n        style: imageStyle,\n        className: \"react-photo-album--photo\",\n        loading: \"lazy\",\n        decoding: \"async\",\n        ...srcSetAndSizes(photo, layout, layoutOptions),\n        ...restImageProps,\n    };\n    const renderDefaultPhoto = (options) => {\n        const { src, alt, srcSet, sizes, style: unwrappedStyle, ...rest } = imageProps;\n        return (React.createElement(\"img\", { alt: alt, ...(srcSet ? { srcSet, sizes } : null), src: src, style: (options === null || options === void 0 ? void 0 : options.wrapped) ? { display: \"block\", width: \"100%\", height: \"100%\" } : unwrappedStyle, ...rest }));\n    };\n    const wrapperStyle = (({ display, boxSizing, width, aspectRatio, padding, marginBottom, cursor }) => ({\n        display,\n        boxSizing,\n        width,\n        aspectRatio,\n        padding,\n        marginBottom,\n        cursor,\n    }))(imageStyle);\n    return (React.createElement(React.Fragment, null, (_b = renderPhoto === null || renderPhoto === void 0 ? void 0 : renderPhoto({\n        photo,\n        layout,\n        layoutOptions,\n        imageProps,\n        renderDefaultPhoto,\n        wrapperStyle,\n    })) !== null && _b !== void 0 ? _b : renderDefaultPhoto()));\n}\n\nfunction defaultRenderRowContainer({ rowContainerProps, children, }) {\n    return React.createElement(\"div\", { ...rowContainerProps }, children);\n}\nfunction RowContainerRenderer(props) {\n    const { layoutOptions, rowIndex, rowsCount, renderRowContainer, rowContainerProps: { style, ...restRowContainerProps } = {}, children, } = props;\n    const rowContainerProps = {\n        className: \"react-photo-album--row\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            ...(rowIndex < rowsCount - 1 ? { marginBottom: `${layoutOptions.spacing}px` } : null),\n            ...style,\n        },\n        ...restRowContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderRowContainer !== null && renderRowContainer !== void 0 ? renderRowContainer : defaultRenderRowContainer)({\n        layoutOptions,\n        rowIndex,\n        rowsCount,\n        rowContainerProps,\n        children,\n    })));\n}\n\nfunction RowsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderRowContainer, componentsProps } = props;\n    const rowsLayout = computeRowsLayout({ photos, layoutOptions });\n    if (!rowsLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, rowsLayout.map((row, rowIndex) => (React.createElement(RowContainerRenderer, { key: `row-${rowIndex}`, layoutOptions: layoutOptions, rowIndex: rowIndex, rowsCount: rowsLayout.length, renderRowContainer: renderRowContainer, rowContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.rowContainerProps }, row.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeShortestPath(graph, pathLength, startNode, endNode) {\n    const matrix = new Map();\n    const queue = new Set();\n    queue.add(startNode);\n    for (let length = 0; length < pathLength; length += 1) {\n        const currentQueue = [...queue.keys()];\n        queue.clear();\n        currentQueue.forEach((node) => {\n            const accumulatedWeight = length > 0 ? matrix.get(node)[length].weight : 0;\n            graph(node).forEach(({ neighbor, weight }) => {\n                let paths = matrix.get(neighbor);\n                if (!paths) {\n                    paths = [];\n                    matrix.set(neighbor, paths);\n                }\n                const newWeight = accumulatedWeight + weight;\n                const nextPath = paths[length + 1];\n                if (!nextPath ||\n                    (nextPath.weight > newWeight && (nextPath.weight / newWeight > 1.0001 || node < nextPath.node))) {\n                    paths[length + 1] = { node, weight: newWeight };\n                }\n                if (length < pathLength - 1 && neighbor !== endNode) {\n                    queue.add(neighbor);\n                }\n            });\n        });\n    }\n    return matrix;\n}\nfunction reconstructShortestPath(matrix, pathLength, endNode) {\n    const path = [endNode];\n    for (let node = endNode, length = pathLength; length > 0; length -= 1) {\n        node = matrix.get(node)[length].node;\n        path.push(node);\n    }\n    return path.reverse();\n}\nfunction findShortestPathLengthN(graph, pathLength, startNode, endNode) {\n    return reconstructShortestPath(computeShortestPath(graph, pathLength, startNode, endNode), pathLength, endNode);\n}\n\nfunction makeGetColumnNeighbors({ photos, spacing, padding, targetColumnWidth, targetColumnHeight, }) {\n    return (node) => {\n        const results = [];\n        const cutOffHeight = targetColumnHeight * 1.5;\n        let height = targetColumnWidth / ratio(photos[node]) + 2 * padding;\n        for (let i = node + 1; i < photos.length + 1; i += 1) {\n            results.push({ neighbor: i, weight: (targetColumnHeight - height) ** 2 });\n            if (height > cutOffHeight || i === photos.length) {\n                break;\n            }\n            height += targetColumnWidth / ratio(photos[i]) + spacing + 2 * padding;\n        }\n        return results;\n    };\n}\nfunction buildColumnsModel({ path, photos, containerWidth, columnsGaps, columnsRatios, spacing, padding, }) {\n    const columnsModel = [];\n    const totalRatio = columnsRatios.reduce((total, columnRatio) => total + columnRatio, 0);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.map((photo, index) => ({ photo, index })).slice(path[i], path[i + 1]);\n        const totalAdjustedGaps = columnsRatios.reduce((total, columnRatio, index) => total + (columnsGaps[i] - columnsGaps[index]) * columnRatio, 0);\n        const columnWidth = ((containerWidth - (path.length - 2) * spacing - 2 * (path.length - 1) * padding - totalAdjustedGaps) *\n            columnsRatios[i]) /\n            totalRatio;\n        columnsModel.push(column.map(({ photo, index }, photoIndex) => ({\n            photo,\n            layout: {\n                width: columnWidth,\n                height: columnWidth / ratio(photo),\n                index,\n                photoIndex,\n                photosCount: column.length,\n            },\n        })));\n    }\n    return columnsModel;\n}\nfunction computeColumnsModel({ photos, layoutOptions, targetColumnWidth, }) {\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnsGaps = [];\n    const columnsRatios = [];\n    if (photos.length <= columns) {\n        const averageRatio = photos.length > 0 ? photos.reduce((acc, photo) => acc + ratio(photo), 0) / photos.length : 1;\n        for (let i = 0; i < columns; i += 1) {\n            columnsGaps[i] = 2 * padding;\n            columnsRatios[i] = i < photos.length ? ratio(photos[i]) : averageRatio;\n        }\n        const columnsModel = buildColumnsModel({\n            path: Array.from({ length: columns + 1 }).map((_, index) => Math.min(index, photos.length)),\n            photos,\n            columnsRatios,\n            columnsGaps,\n            containerWidth,\n            spacing,\n            padding,\n        });\n        return { columnsGaps, columnsRatios, columnsModel };\n    }\n    const targetColumnHeight = (photos.reduce((acc, photo) => acc + targetColumnWidth / ratio(photo), 0) +\n        spacing * (photos.length - columns) +\n        2 * padding * photos.length) /\n        columns;\n    const getNeighbors = makeGetColumnNeighbors({\n        photos,\n        targetColumnWidth,\n        targetColumnHeight,\n        spacing,\n        padding,\n    });\n    const path = findShortestPathLengthN(getNeighbors, columns, 0, photos.length);\n    for (let i = 0; i < path.length - 1; i += 1) {\n        const column = photos.slice(path[i], path[i + 1]);\n        columnsGaps[i] = spacing * (column.length - 1) + 2 * padding * column.length;\n        columnsRatios[i] = 1 / column.reduce((acc, photo) => acc + 1 / ratio(photo), 0);\n    }\n    const columnsModel = buildColumnsModel({\n        path,\n        photos,\n        columnsRatios,\n        columnsGaps,\n        containerWidth,\n        spacing,\n        padding,\n    });\n    return { columnsGaps, columnsRatios, columnsModel };\n}\nfunction computeLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const targetColumnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    const { columnsGaps, columnsRatios, columnsModel } = computeColumnsModel({\n        photos,\n        layoutOptions,\n        targetColumnWidth,\n    });\n    if (columnsModel.findIndex((columnModel) => columnModel.findIndex(({ layout: { width, height } }) => width < 0 || height < 0) >= 0) >= 0) {\n        if (columns > 1) {\n            return computeLayout({ photos, layoutOptions: { ...layoutOptions, columns: columns - 1 } });\n        }\n        return undefined;\n    }\n    return { columnsModel, columnsGaps, columnsRatios };\n}\nfunction computeColumnsLayout({ photos, layoutOptions, }) {\n    return computeLayout({ photos, layoutOptions });\n}\n\nfunction defaultRenderColumnContainer({ columnContainerProps, children, }) {\n    return React.createElement(\"div\", { ...columnContainerProps }, children);\n}\nfunction cssColumnWidth(props) {\n    const { layoutOptions, columnIndex, columnsCount, columnsGaps, columnsRatios } = props;\n    const { layout, spacing, padding } = layoutOptions;\n    if (layout === \"masonry\" || !columnsGaps || !columnsRatios) {\n        return `calc((100% - ${spacing * (columnsCount - 1)}px) / ${columnsCount})`;\n    }\n    const totalRatio = columnsRatios.reduce((acc, ratio) => acc + ratio, 0);\n    const totalAdjustedGaps = columnsRatios.reduce((acc, ratio, index) => acc + (columnsGaps[columnIndex] - columnsGaps[index]) * ratio, 0);\n    return `calc((100% - ${round((columnsCount - 1) * spacing + 2 * columnsCount * padding + totalAdjustedGaps, 3)}px) * ${round(columnsRatios[columnIndex] / totalRatio, 5)} + ${2 * padding}px)`;\n}\nfunction ColumnContainerRenderer(props) {\n    const { layoutOptions, renderColumnContainer, children, columnContainerProps: { style, ...restColumnContainerProps } = {}, ...rest } = props;\n    const columnContainerProps = {\n        className: \"react-photo-album--column\",\n        style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            flexWrap: \"nowrap\",\n            alignItems: \"flex-start\",\n            width: cssColumnWidth(props),\n            justifyContent: layoutOptions.layout === \"columns\" ? \"space-between\" : \"flex-start\",\n            ...style,\n        },\n        ...restColumnContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderColumnContainer !== null && renderColumnContainer !== void 0 ? renderColumnContainer : defaultRenderColumnContainer)({\n        layoutOptions,\n        columnContainerProps,\n        children,\n        ...rest,\n    })));\n}\n\nfunction ColumnsLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const columnsLayout = computeColumnsLayout({ photos, layoutOptions });\n    if (!columnsLayout)\n        return null;\n    const { columnsModel, columnsRatios, columnsGaps } = columnsLayout;\n    return (React.createElement(React.Fragment, null, columnsModel.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `column-${columnIndex}`, layoutOptions: layoutOptions, columnIndex: columnIndex, columnsCount: columnsModel.length, columnsGaps: columnsGaps, columnsRatios: columnsRatios, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction computeMasonryLayout(props) {\n    const { photos, layoutOptions } = props;\n    const { columns, spacing, padding, containerWidth } = layoutOptions;\n    const columnWidth = (containerWidth - spacing * (columns - 1) - 2 * padding * columns) / columns;\n    if (columnWidth <= 0) {\n        return columns > 1\n            ? computeMasonryLayout({\n                ...props,\n                layoutOptions: { ...layoutOptions, columns: columns - 1 },\n            })\n            : undefined;\n    }\n    const columnsCurrentTopPositions = [];\n    for (let i = 0; i < columns; i += 1) {\n        columnsCurrentTopPositions[i] = 0;\n    }\n    const columnsModel = photos.reduce((model, photo, index) => {\n        const shortestColumn = columnsCurrentTopPositions.reduce((currentShortestColumn, item, i) => item < columnsCurrentTopPositions[currentShortestColumn] - 1 ? i : currentShortestColumn, 0);\n        columnsCurrentTopPositions[shortestColumn] =\n            columnsCurrentTopPositions[shortestColumn] + columnWidth / ratio(photo) + spacing + 2 * padding;\n        model[shortestColumn].push({ photo, index });\n        return model;\n    }, Array.from({ length: columns }).map(() => []));\n    return columnsModel.map((column) => column.map(({ photo, index }, photoIndex) => ({\n        photo,\n        layout: {\n            width: columnWidth,\n            height: columnWidth / ratio(photo),\n            index,\n            photoIndex,\n            photosCount: column.length,\n        },\n    })));\n}\n\nfunction MasonryLayout(props) {\n    const { photos, layoutOptions, renderPhoto, renderColumnContainer, componentsProps } = props;\n    const masonryLayout = computeMasonryLayout({ photos, layoutOptions });\n    if (!masonryLayout)\n        return null;\n    return (React.createElement(React.Fragment, null, masonryLayout.map((column, columnIndex) => (React.createElement(ColumnContainerRenderer, { key: `masonry-column-${columnIndex}`, layoutOptions: layoutOptions, columnsCount: masonryLayout.length, columnIndex: columnIndex, renderColumnContainer: renderColumnContainer, columnContainerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.columnContainerProps }, column.map(({ photo, layout }) => (React.createElement(PhotoRenderer, { key: photo.key || photo.src, photo: photo, layout: layout, layoutOptions: layoutOptions, renderPhoto: renderPhoto, imageProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.imageProps }))))))));\n}\n\nfunction defaultRenderContainer({ containerProps, children, containerRef }) {\n    return (React.createElement(\"div\", { ref: containerRef, ...containerProps }, children));\n}\nfunction ContainerRenderer(props) {\n    const { layout, renderContainer, children, containerRef, containerProps: { style, ...restContainerProps } = {}, } = props;\n    const containerProps = {\n        className: `react-photo-album react-photo-album--${layout}`,\n        style: {\n            display: \"flex\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"space-between\",\n            flexDirection: layout === \"rows\" ? \"column\" : \"row\",\n            ...style,\n        },\n        ...restContainerProps,\n    };\n    return (React.createElement(React.Fragment, null, (renderContainer !== null && renderContainer !== void 0 ? renderContainer : defaultRenderContainer)({\n        containerProps,\n        containerRef,\n        layout,\n        children,\n    })));\n}\n\nfunction useArray(array) {\n    const ref = React.useRef(array);\n    if (!array || !ref.current || array.join() !== ref.current.join()) {\n        ref.current = array;\n    }\n    return ref.current;\n}\n\nfunction containerWidthReducer(state, { newContainerWidth, newScrollbarWidth }) {\n    const { containerWidth, scrollbarWidth } = state;\n    if (containerWidth !== undefined &&\n        scrollbarWidth !== undefined &&\n        newContainerWidth !== undefined &&\n        newScrollbarWidth !== undefined &&\n        newContainerWidth > containerWidth &&\n        newContainerWidth - containerWidth <= 20 &&\n        newScrollbarWidth < scrollbarWidth) {\n        return { containerWidth, scrollbarWidth: newScrollbarWidth };\n    }\n    return containerWidth !== newContainerWidth || scrollbarWidth !== newScrollbarWidth\n        ? { containerWidth: newContainerWidth, scrollbarWidth: newScrollbarWidth }\n        : state;\n}\nfunction resolveContainerWidth(el, breakpoints) {\n    let width = el === null || el === void 0 ? void 0 : el.clientWidth;\n    if (width !== undefined && breakpoints && breakpoints.length > 0) {\n        const sorted = [...breakpoints.filter((x) => x > 0)].sort((a, b) => b - a);\n        sorted.push(Math.floor(sorted[sorted.length - 1] / 2));\n        const threshold = width;\n        width = sorted.find((breakpoint, index) => breakpoint <= threshold || index === sorted.length - 1);\n    }\n    return width;\n}\nfunction useContainerWidth(breakpoints, defaultContainerWidth) {\n    const [{ containerWidth }, dispatch] = React.useReducer(containerWidthReducer, {\n        containerWidth: defaultContainerWidth,\n    });\n    const ref = React.useRef(null);\n    const observerRef = React.useRef();\n    const containerRef = React.useCallback((node) => {\n        var _a;\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\n        observerRef.current = undefined;\n        ref.current = node;\n        const updateWidth = () => dispatch({\n            newContainerWidth: resolveContainerWidth(ref.current, breakpoints),\n            newScrollbarWidth: window.innerWidth - document.documentElement.clientWidth,\n        });\n        updateWidth();\n        if (node && typeof ResizeObserver !== \"undefined\") {\n            observerRef.current = new ResizeObserver(updateWidth);\n            observerRef.current.observe(node);\n        }\n    }, [breakpoints]);\n    return { containerRef, containerWidth };\n}\n\nconst breakpoints = Object.freeze([1200, 600, 300, 0]);\nfunction unwrap(value, containerWidth) {\n    return typeof value === \"function\" ? value(containerWidth) : value;\n}\nfunction unwrapParameter(value, containerWidth) {\n    return typeof value !== \"undefined\" ? unwrap(value, containerWidth) : undefined;\n}\nfunction selectResponsiveValue(values, containerWidth) {\n    const index = breakpoints.findIndex((breakpoint) => breakpoint <= containerWidth);\n    return unwrap(values[index >= 0 ? index : 0], containerWidth);\n}\nfunction resolveResponsiveParameter(parameter, containerWidth, values, minValue = 0) {\n    const value = unwrapParameter(parameter, containerWidth);\n    return Math.round(Math.max(value === undefined ? selectResponsiveValue(values, containerWidth) : value, minValue));\n}\n\nfunction resolveLayoutOptions({ layout, onClick, containerWidth, targetRowHeight, rowConstraints, columns, spacing, padding, sizes, }) {\n    return {\n        layout,\n        onClick,\n        containerWidth,\n        columns: resolveResponsiveParameter(columns, containerWidth, [5, 4, 3, 2], 1),\n        spacing: resolveResponsiveParameter(spacing, containerWidth, [20, 15, 10, 5]),\n        padding: resolveResponsiveParameter(padding, containerWidth, [0, 0, 0, 0, 0]),\n        targetRowHeight: resolveResponsiveParameter(targetRowHeight, containerWidth, [\n            (w) => w / 5,\n            (w) => w / 4,\n            (w) => w / 3,\n            (w) => w / 2,\n        ]),\n        rowConstraints: unwrapParameter(rowConstraints, containerWidth),\n        sizes,\n    };\n}\nfunction resolveComponentsProps(componentsProps, containerWidth) {\n    return typeof componentsProps === \"function\" ? componentsProps(containerWidth) : componentsProps;\n}\nfunction renderLayout(props, containerWidth, componentsProps) {\n    const { photos, layout, renderPhoto, renderRowContainer, renderColumnContainer } = props;\n    const layoutOptions = resolveLayoutOptions({ containerWidth, ...props });\n    const commonLayoutProps = { photos, renderPhoto, componentsProps };\n    if (layout === \"rows\") {\n        return (React.createElement(RowsLayout, { layoutOptions: layoutOptions, renderRowContainer: renderRowContainer, ...commonLayoutProps }));\n    }\n    if (layout === \"columns\") {\n        return (React.createElement(ColumnsLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n    }\n    return (React.createElement(MasonryLayout, { layoutOptions: layoutOptions, renderColumnContainer: renderColumnContainer, ...commonLayoutProps }));\n}\nfunction PhotoAlbum(props) {\n    const { photos, layout, renderContainer, defaultContainerWidth, breakpoints } = props;\n    const { containerRef, containerWidth } = useContainerWidth(useArray(breakpoints), defaultContainerWidth);\n    if (!layout || ![\"rows\", \"columns\", \"masonry\"].includes(layout) || !Array.isArray(photos))\n        return null;\n    const componentsProps = resolveComponentsProps(props.componentsProps, containerWidth);\n    return (React.createElement(ContainerRenderer, { layout: layout, containerRef: containerRef, renderContainer: renderContainer, containerProps: componentsProps === null || componentsProps === void 0 ? void 0 : componentsProps.containerProps }, containerWidth ? renderLayout(props, containerWidth, componentsProps) : null));\n}\n\nexport { PhotoAlbum, PhotoAlbum as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}